<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zljtt.wiki.mapper.DeckCardsMapper">
  <resultMap id="BaseResultMap" type="com.zljtt.wiki.domain.DeckCards">
    <id column="deck_id" jdbcType="BIGINT" property="deckId" />
    <id column="card_set_code" jdbcType="VARCHAR" property="cardSetCode" />
    <id column="card_collector_number" jdbcType="VARCHAR" property="cardCollectorNumber" />
    <result column="foil" jdbcType="BIT" property="foil" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    deck_id, card_set_code, card_collector_number, foil, amount
  </sql>
  <select id="selectByExample" parameterType="com.zljtt.wiki.domain.DeckCardsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from deck_cards
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from deck_cards
    where deck_id = #{deckId,jdbcType=BIGINT}
      and card_set_code = #{cardSetCode,jdbcType=VARCHAR}
      and card_collector_number = #{cardCollectorNumber,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from deck_cards
    where deck_id = #{deckId,jdbcType=BIGINT}
      and card_set_code = #{cardSetCode,jdbcType=VARCHAR}
      and card_collector_number = #{cardCollectorNumber,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zljtt.wiki.domain.DeckCardsExample">
    delete from deck_cards
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zljtt.wiki.domain.DeckCards">
    insert into deck_cards (deck_id, card_set_code, card_collector_number, 
      foil, amount)
    values (#{deckId,jdbcType=BIGINT}, #{cardSetCode,jdbcType=VARCHAR}, #{cardCollectorNumber,jdbcType=VARCHAR}, 
      #{foil,jdbcType=BIT}, #{amount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zljtt.wiki.domain.DeckCards">
    insert into deck_cards
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deckId != null">
        deck_id,
      </if>
      <if test="cardSetCode != null">
        card_set_code,
      </if>
      <if test="cardCollectorNumber != null">
        card_collector_number,
      </if>
      <if test="foil != null">
        foil,
      </if>
      <if test="amount != null">
        amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deckId != null">
        #{deckId,jdbcType=BIGINT},
      </if>
      <if test="cardSetCode != null">
        #{cardSetCode,jdbcType=VARCHAR},
      </if>
      <if test="cardCollectorNumber != null">
        #{cardCollectorNumber,jdbcType=VARCHAR},
      </if>
      <if test="foil != null">
        #{foil,jdbcType=BIT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zljtt.wiki.domain.DeckCardsExample" resultType="java.lang.Long">
    select count(*) from deck_cards
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update deck_cards
    <set>
      <if test="record.deckId != null">
        deck_id = #{record.deckId,jdbcType=BIGINT},
      </if>
      <if test="record.cardSetCode != null">
        card_set_code = #{record.cardSetCode,jdbcType=VARCHAR},
      </if>
      <if test="record.cardCollectorNumber != null">
        card_collector_number = #{record.cardCollectorNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.foil != null">
        foil = #{record.foil,jdbcType=BIT},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update deck_cards
    set deck_id = #{record.deckId,jdbcType=BIGINT},
      card_set_code = #{record.cardSetCode,jdbcType=VARCHAR},
      card_collector_number = #{record.cardCollectorNumber,jdbcType=VARCHAR},
      foil = #{record.foil,jdbcType=BIT},
      amount = #{record.amount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zljtt.wiki.domain.DeckCards">
    update deck_cards
    <set>
      <if test="foil != null">
        foil = #{foil,jdbcType=BIT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
    </set>
    where deck_id = #{deckId,jdbcType=BIGINT}
      and card_set_code = #{cardSetCode,jdbcType=VARCHAR}
      and card_collector_number = #{cardCollectorNumber,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zljtt.wiki.domain.DeckCards">
    update deck_cards
    set foil = #{foil,jdbcType=BIT},
      amount = #{amount,jdbcType=INTEGER}
    where deck_id = #{deckId,jdbcType=BIGINT}
      and card_set_code = #{cardSetCode,jdbcType=VARCHAR}
      and card_collector_number = #{cardCollectorNumber,jdbcType=VARCHAR}
  </update>
</mapper>